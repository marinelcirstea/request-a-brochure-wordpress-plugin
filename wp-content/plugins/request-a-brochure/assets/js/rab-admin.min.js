document.addEventListener("DOMContentLoaded",()=>{rab_listenForBrochureCreation(),rab_generate(),rab_generateRequests(),document.getElementById("rab-button-refresh-requests").addEventListener("click",e=>{disable(e.target)(async()=>{await rab_generateRequests(),enable(e.target)})()})});const apiUrl=`${SERVER_DATA.rest_url}`,brochuresUrl=`${apiUrl}/brochures`,brochureRequests=`${apiUrl}/brochure-requests`,rab_deleteBrochure=async(_this,id)=>{const parent=_this.parentNode.parentNode;disable(parent);const success=await rab_captain.delete(`${brochuresUrl}/${id}`);if(!success)return enable(parent);parent.remove()},rab_deleteBrochureRequest=async(_this,brochure_id)=>{const parent=_this.parentNode.parentNode;disable(parent);const success=await rab_captain.delete(`${brochureRequests}/${brochure_id}`);if(!success)return enable(parent);parent.remove()},rab_changeBrochureStatus=async(_this,id,status)=>{const parent=_this.parentNode.parentNode;disable(parent);const success=await rab_captain.put(`${SERVER_DATA.rest_url}/brochures/${id}`,{active:status?0:1});success&&rab_generate(),enable(parent)},rab_changeBrochureRequestStatus=async(_this,request_id,status)=>{const parent=_this.parentNode.parentNode;disable(parent);const success=await rab_captain.put(`${brochureRequests}/${request_id}`,{status:status});success&&rab_generateRequests(),enable(parent)},rab_generate=async()=>{const data=await rab_captain.get(brochuresUrl),spinner=document.querySelector(".rab-spinner");if(!Array.isArray(data)||!data[0])return spinner.innerHTML="<h3>No brochures found.</h3>";spinner.innerHTML="",rab_TbodyGenerator(data)},rab_generateRequests=async()=>{const data=await rab_captain.get(brochureRequests),requestsSpinner=document.querySelector(".rab-requests-spinner");if(!Array.isArray(data)||!data[0])return requestsSpinner.innerHTML="<h3>No brochure requests.</h3>";requestsSpinner.innerHTML="",rab_requestsTbodyGenerator(data)},rab_TbodyGenerator=brochures=>{const tbody=document.getElementById("rab-brochures-tbody");let htmldata="";for(const brochure of brochures)htmldata+=`\n    <tr>\n        <td>${brochure.brochure}</td>\n        <td>${parseInt(brochure.active)?"ACTIVE":"INACTIVE"}</td>\n        <td>\n            <button \n            onclick="rab_deleteBrochure(this, ${brochure.id})" \n            id="rab-delete-button" \n            class="button button-secondary">\n                DELETE\n            </button>\n            <button \n            onclick="rab_changeBrochureStatus(this, ${brochure.id}, ${parseInt(brochure.active)})"\n            class="button button-secondary">\n              CHANGE STATUS\n            </button>\n        </td>\n    </tr>\n    `;tbody.innerHTML=htmldata},rab_requestsTbodyGenerator=requests=>{const tbody=document.getElementById("rab-brochure-requests-tbody"),requestsWithIds=requests.reduce((acc,curr)=>(acc[curr.request_id]?acc[curr.request_id].brochure_ids.push(curr.brochure_id):acc[curr.request_id]={request_id:curr.request_id,name:curr.name,address:curr.address,brochure_ids:[curr.brochure_id],status:curr.status},acc),{});let htmldata="";for(const request of Object.values(requestsWithIds))htmldata+=`\n    <tr>\n        <td>${request.name}</td>\n        <td>${request.address}</td>\n        <td>${request.brochure_ids.join(", ")}</td>\n        <td>${request.status}</td>\n        <td>\n        \x3c!-- <button \n        onclick="rab_deleteBrochureRequest(this, '${request.request_id}')" \n        id="rab-delete-button" \n        class="button button-secondary">\n            DELETE\n        </button> --\x3e\n        <button \n        onclick="rab_changeBrochureRequestStatus(this, '${request.request_id}', 'cancelled')"\n        class="button button-secondary">\n          CANCEL\n        </button>\n        <button \n        onclick="rab_changeBrochureRequestStatus(this, '${request.request_id}', 'dispatched')"\n        class="button button-secondary">\n          DISPATCH\n        </button>\n        </td>\n    </tr>\n    `;tbody.innerHTML=htmldata};function rab_listenForBrochureCreation(){const rabFormCreateBrochure=document.getElementById("rab-form-create-brochure");rabFormCreateBrochure.addEventListener("submit",async e=>{e.preventDefault();const brochure=rabFormCreateBrochure.querySelector("input"),button=rabFormCreateBrochure.querySelector("button"),initialText=button.innerHTML;button.innerHTML="Creating...",button.disabled=!0;const res=await rab_captain.post(brochuresUrl,{brochure:brochure.value});brochure.value="",button.innerHTML=initialText,button.disabled=!1,res&&rab_generate()})}const rab_captain={get:async url=>await rab_fetcher(url,"GET"),post:async(url,body)=>await rab_fetcher(url,"POST",body),put:async(url,body)=>await rab_fetcher(url,"PUT",body),delete:async url=>await rab_fetcher(url,"DELETE")},rab_fetcher=async(url,method,body={})=>{const options={method:method,headers:{"Content-Type":"application/json",Accepts:"application/json"}};"POST"!==method&&"PUT"!==method||(options.body=JSON.stringify(body));const res=await fetch(url,options),data=await res.json();return!!res.ok&&data},disable=element=>{element.style.opacity=.5,element.style.pointerEvents="none"},enable=element=>{element.style.opacity=1,element.style.pointerEvents="auto"};